#ifndef NONTERM_H
#define NONTERM_H

#include <string.h>

#define typedef_name 10001
#define class_name 10002
#define template_name 10003
#define identifier 10004
#define literal 10005
#define integer_literal 10006
#define character_literal 10007
#define floating_literal 10008
#define string_literal 10009
#define boolean_literal 10010
#define translation_unit 10011
#define primary_expression 10012
#define id_expression 10013
#define unqualified_id 10014
#define qualified_id 10015
#define nested_name_specifier 10016
#define postfix_expression 10017
#define expression_list 10018
#define unary_expression 10019
#define unary_operator 10020
#define new_expression 10021
#define new_placement 10022
#define new_type_id 10023
#define new_declarator 10024
#define direct_new_declarator 10025
#define new_initializer 10026
#define delete_expression 10027
#define cast_expression 10028
#define pm_expression 10029
#define multiplicative_expression 10030
#define additive_expression 10031
#define shift_expression 10032
#define relational_expression 10033
#define equality_expression 10034
#define and_expression 10035
#define exclusive_or_expression 10036
#define inclusive_or_expression 10037
#define logical_and_expression 10038
#define logical_or_expression 10039
#define conditional_expression 10040
#define assignment_expression 10041
#define assignment_operator 10042
#define expression 10043
#define constant_expression 10044
#define statement 10045
#define labeled_statement 10046
#define expression_statement 10047
#define compound_statement 10048
#define statement_seq 10049
#define selection_statement 10050
#define condition 10051
#define iteration_statement 10052
#define for_init_statement 10053
#define jump_statement 10054
#define declaration_statement 10055
#define declaration_seq 10056
#define declaration 10057
#define block_declaration 10058
#define simple_declaration 10059
#define decl_specifier 10060
#define decl_specifier_seq 10061
#define storage_class_specifier 10062
#define function_specifier 10063
#define type_specifier 10064
#define simple_type_specifier 10065
#define type_name 10066
#define elaborated_type_specifier 10067
#define enum_name 10068
#define enum_specifier 10069
#define enumerator_list 10070
#define enumerator_definition 10071
#define enumerator 10072
#define namespace_name 10073
#define original_namespace_name 10074
#define namespace_definition 10075
#define named_namespace_definition 10076
#define original_namespace_definition 10077
#define extension_namespace_definition 10078
#define unnamed_namespace_definition 10079
#define namespace_body 10080
#define namespace_alias 10081
#define namespace_alias_definition 10082
#define qualified_namespace_specifier 10083
#define using_declaration 10084
#define using_directive 10085
#define asm_definition 10086
#define linkage_specification 10087
#define init_declarator_list 10088
#define init_declarator 10089
#define declarator 10090
#define direct_declarator 10091
#define ptr_operator 10092
#define cv_qualifier_seq 10093
#define cv_qualifier 10094
#define declarator_id 10095
#define type_id 10096
#define type_specifier_seq 10097
#define abstract_declarator 10098
#define direct_abstract_declarator 10099
#define parameter_declaration_clause 10100
#define parameter_declaration_list 10101
#define parameter_declaration 10102
#define function_definition 10103
#define function_body 10104
#define initializer 10105
#define initializer_clause 10106
#define initializer_list 10107
#define class_specifier 10108
#define class_head 10109
#define class_key 10110
#define member_specification 10111
#define member_declaration 10112
#define member_declarator_list 10113
#define member_declarator 10114
#define pure_specifier 10115
#define constant_initializer 10116
#define base_clause 10117
#define base_specifier_list 10118
#define base_specifier 10119
#define access_specifier 10120
#define conversion_function_id 10121
#define conversion_type_id 10122
#define conversion_declarator 10123
#define ctor_initializer 10124
#define mem_initializer_list 10125
#define mem_initializer 10126
#define mem_initializer_id 10127
#define operator_function_id 10128
#define operator 10129
#define template_declaration 10130
#define template_parameter_list 10131
#define template_parameter 10132
#define type_parameter 10133
#define template_id 10134
#define template_argument_list 10135
#define template_argument 10136
#define explicit_instantiation 10137
#define explicit_specialization 10138
#define try_block 10139
#define function_try_block 10140
#define handler_seq 10141
#define handler 10142
#define exception_declaration 10143
#define throw_expression 10144
#define exception_specification 10145
#define type_id_list 10146
#define declaration_seq_opt 10147
#define nested_name_specifier_opt 10148
#define expression_list_opt 10149
#define COLONCOLON_opt 10150
#define new_placement_opt 10151
#define new_initializer_opt 10152
#define new_declarator_opt 10153
#define expression_opt 10154
#define statement_seq_opt 10155
#define condition_opt 10156
#define enumerator_list_opt 10157
#define initializer_opt 10158
#define constant_expression_opt 10159
#define abstract_declarator_opt 10160
#define type_specifier_seq_opt 10161
#define direct_abstract_declarator_opt 10162
#define ctor_initializer_opt 10163
#define COMMA_opt 10164
#define member_specification_opt 10165
#define SEMICOLON_opt 10166
#define conversion_declarator_opt 10167
#define EXPORT_opt 10168
#define handler_seq_opt 10169
#define assignment_expression_opt 10170
#define type_id_list_opt 10171

char *humanReadable(int nonterm);

#endif