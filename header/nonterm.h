#ifndef NONTERM_H
#define NONTERM_H

#include <string.h>

#define typedef_name -100
#define class_name -200
#define template_name -300
#define identifier -400
#define literal -500
#define integer_literal -600
#define character_literal -700
#define floating_literal -800
#define string_literal -900
#define boolean_literal -1000
#define translation_unit -1100
#define primary_expression -1200
#define id_expression -1300
#define unqualified_id -1400
#define qualified_id -1500
#define nested_name_specifier -1600
#define postfix_expression -1700
#define expression_list -1800
#define unary_expression -1900
#define unary_operator -2000
#define new_expression -2100
#define new_placement -2200
#define new_type_id -2300
#define new_declarator -2400
#define direct_new_declarator -2500
#define new_initializer -2600
#define delete_expression -2700
#define cast_expression -2800
#define pm_expression -2900
#define multiplicative_expression -3000
#define additive_expression -3100
#define shift_expression -3200
#define relational_expression -3300
#define equality_expression -3400
#define and_expression -3500
#define exclusive_or_expression -3600
#define inclusive_or_expression -3700
#define logical_and_expression -3800
#define logical_or_expression -3900
#define conditional_expression -4000
#define assignment_expression -4100
#define assignment_operator -4200
#define expression -4300
#define constant_expression -4400
#define statement -4500
#define labeled_statement -4600
#define expression_statement -4700
#define compound_statement -4800
#define statement_seq -4900
#define selection_statement -5000
#define condition -5100
#define iteration_statement -5200
#define for_init_statement -5300
#define jump_statement -5400
#define declaration_statement -5500
#define declaration_seq -5600
#define declaration -5700
#define block_declaration -5800
#define simple_declaration -5900
#define decl_specifier -6000
#define decl_specifier_seq -6100
#define storage_class_specifier -6200
#define function_specifier -6300
#define type_specifier -6400
#define simple_type_specifier -6500
#define type_name -6600
#define elaborated_type_specifier -6700
#define enum_name -6800
#define enum_specifier -6900
#define enumerator_list -7000
#define enumerator_definition -7100
#define enumerator -7200
#define namespace_name -7300
#define original_namespace_name -7400
#define namespace_definition -7500
#define named_namespace_definition -7600
#define original_namespace_definition -7700
#define extension_namespace_definition -7800
#define unnamed_namespace_definition -7900
#define namespace_body -8000
#define namespace_alias -8100
#define namespace_alias_definition -8200
#define qualified_namespace_specifier -8300
#define using_declaration -8400
#define using_directive -8500
#define asm_definition -8600
#define linkage_specification -8700
#define init_declarator_list -8800
#define init_declarator -8900
#define declarator -9000
#define direct_declarator -9100
#define ptr_operator -9200
#define cv_qualifier_seq -9300
#define cv_qualifier -9400
#define declarator_id -9500
#define type_id -9600
#define type_specifier_seq -9700
#define abstract_declarator -9800
#define direct_abstract_declarator -9900
#define parameter_declaration_clause -10000
#define parameter_declaration_list -10100
#define parameter_declaration -10200
#define function_definition -10300
#define function_body -10400
#define initializer -10500
#define initializer_clause -10600
#define initializer_list -10700
#define class_specifier -10800
#define class_head -10900
#define class_key -11000
#define member_specification -11100
#define member_declaration -11200
#define member_declarator_list -11300
#define member_declarator -11400
#define pure_specifier -11500
#define constant_initializer -11600
#define base_clause -11700
#define base_specifier_list -11800
#define base_specifier -11900
#define access_specifier -12000
#define conversion_function_id -12100
#define conversion_type_id -12200
#define conversion_declarator -12300
#define ctor_initializer -12400
#define mem_initializer_list -12500
#define mem_initializer -12600
#define mem_initializer_id -12700
#define operator_function_id -12800
#define operator -12900
#define template_declaration -13000
#define template_parameter_list -13100
#define template_parameter -13200
#define type_parameter -13300
#define template_id -13400
#define template_argument_list -13500
#define template_argument -13600
#define explicit_instantiation -13700
#define explicit_specialization -13800
#define try_block -13900
#define function_try_block -14000
#define handler_seq -14100
#define handler -14200
#define exception_declaration -14300
#define throw_expression -14400
#define exception_specification -14500
#define type_id_list -14600
#define declaration_seq_opt -14700
#define nested_name_specifier_opt -14800
#define expression_list_opt -14900
#define COLONCOLON_opt -15000
#define new_placement_opt -15100
#define new_initializer_opt -15200
#define new_declarator_opt -15300
#define expression_opt -15400
#define statement_seq_opt -15500
#define condition_opt -15600
#define enumerator_list_opt -15700
#define initializer_opt -15800
#define constant_expression_opt -15900
#define abstract_declarator_opt -16000
#define type_specifier_seq_opt -16100
#define direct_abstract_declarator_opt -16200
#define ctor_initializer_opt -16300
#define COMMA_opt -16400
#define member_specification_opt -16500
#define SEMICOLON_opt -16600
#define conversion_declarator_opt -16700
#define EXPORT_opt -16800
#define handler_seq_opt -16900
#define assignment_expression_opt -17000
#define type_id_list_opt -17100

char *humanReadable(int nonterm);

#endif